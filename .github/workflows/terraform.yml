name: Terraform

defaults:
  run:
    working-directory: ./src/gcp/bigquery

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev
    paths:
      - src/gcp/bigquery/**

jobs:
  deploy:
    name: Deploy BigQuery Datasets
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: 'projects/814992956970/locations/global/workloadIdentityPools/zdh-workflow-wi-pool/providers/github'
        service_account: zdh-workflow-action@bold-seat-291901.iam.gserviceaccount.com

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: List Datasets
      id: list_datasets
      run: |
        ls datasets > datasets_list.txt
        cat datasets_list.txt

    - name: Deploy Each Dataset
      run: |
        while read dataset; do
          echo "Processing dataset: $dataset"
          cd datasets/$dataset
    
          echo "Initializing Terraform in $dataset"
          terraform init || { echo "Terraform init failed for $dataset"; exit 1; }
    
          echo "Checking Terraform format in $dataset"
          terraform fmt -check || { echo "Terraform fmt check failed for $dataset"; terraform fmt; exit 1; }
    
          echo "Planning Terraform changes for $dataset"
          terraform plan -var-file=../environments/${{ github.ref == 'refs/heads/main' && 'production.tfvars' || 'development.tfvars' }} || { echo "Terraform plan failed for $dataset"; exit 1; }
    
          echo "Applying Terraform changes for $dataset"
          terraform apply -var-file=../environments/${{ github.ref == 'refs/heads/main' && 'production.tfvars' || 'development.tfvars' }} -auto-approve || { echo "Terraform apply failed for $dataset"; exit 1; }
    
          cd ../
        done < datasets_list.txt

